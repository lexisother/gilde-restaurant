@page "{id}"
@using Dashboard.DTO
@model ProductModel
@{
    // Page meta
    string path = HttpContext.Request.Path;
    var products = (List<Product>)ViewData["products"];
    ViewData["Title"] = "Product Details";
    ViewData["path"] = path;
    ViewData["HeaderText"] = "Product Details";

    var productId = Convert.ToInt32(RouteData.Values["id"]);
    var product = products.Find(p => p.id == productId);
    if (product == null)
    {
        throw new Exception($"Product with ID {productId} was not found.");
    }

    // The meta items to show in the product header.
    string[] metaItemsToShow = { "id", "created_at" };
    string[] editableItems = { "name", "description", "price", "spanish", "warm", "cold", "vega" };
}

<div class="product-meta">
    <div class="product-meta-content">
        <div class="product-meta-content-pre">
            <div class="pre-holder">
                <span class="pre-icon-holder">
                    <img
                        src="https://patchcord.pw/icons/1015298503867367507/6d9e17.3e95964f73be8ddd8e751f2171923f65da3c779fcb6c44d7c3baf875b1778938.png"
                        alt="food image"
                        class="pre-icon"/>
                </span>
                <div class="pre-content">
                    <div class="pre-content-title-holder">
                        <div class="pre-content-title">@product.name</div>
                        @* TODO: Make these icons conditional to the bools *@
                        <div class="pre-content-title-icon">
                            <svg class="icon" viewBox="0 0 100 100" xml:space="preserve"><path d="M24.6 79.4C21.4 74 20 67.2 21.8 61.1c1.7-5.6 5.5-10.4 9.3-14.7 4.2-4.9 8.9-9.6 11.5-15.6 3.2-7.4 2.7-16.3-1.3-23.3 2.2 2.1 5.2 3 7.9 4.3 5.7 2.7 10.5 7.5 12.8 13.4 2.3 5.9 2 12.8-1.2 18.3-3.6 6.3-11.1 10.2-12.3 17.8-.4 2.9.6 6.2 3.3 7.5.9.4 1.9.6 2.9.6 3.8-.1 7.3-2.6 9.5-5.8 3.8-5.3 3.8-10.9 2.9-17.1 1.7.4 3.6 2.8 4.7 4.1 5.2 5.9 8.9 15.4 6.5 23.2-1.6 5-5.1 9.3-9.3 12.4-8.5 6.3-20.1 8-30 4.4-6-2-11.2-5.9-14.4-11.2z" fill-rule="evenodd" clip-rule="evenodd" fill="#e15b64"/></svg>
                        </div>
                        <div class="pre-content-title-icon">
                            @* TODO: Choose better icon *@
                            <svg class="icon" viewBox="0 0 100 100" xml:space="preserve"><path d="M64.8 16.7c-.4-.9-1.5-1.2-2.4-.8l-10.7 5.4v-4.8l9-4.6c.9-.4 1.2-1.5.8-2.4-.4-.9-1.5-1.2-2.4-.8l-7.4 3.7V5.8C51.8 4.8 51 4 50 4s-1.8.8-1.8 1.8v6.7l-7.4-3.7c-.9-.4-2-.1-2.4.8-.4.9-.1 2 .8 2.4l9 4.6v4.8L37.5 16c-.9-.4-2-.1-2.4.8-.4.9-.1 2 .8 2.4l12.3 6.2v3.2l-7.4-3.7c-.9-.4-2-.1-2.4.8-.4.9-.1 2 .8 2.4l9 4.6V50c0 1 .8 1.8 1.8 1.8s1.8-.8 1.8-1.8V32.5l9-4.6c.9-.4 1.2-1.5.8-2.4-.4-.9-1.5-1.2-2.4-.8l-7.4 3.7v-3.2L64.1 19c.8-.3 1.2-1.4.7-2.3z" fill="#a0c8d7"/><path d="M50.9 48.5l-15.2-8.8.6-10.1c.1-1-.7-1.8-1.7-1.9-1-.1-1.8.7-1.9 1.7l-.5 8.3-2.7-1.6.8-13.7c.1-1-.7-1.8-1.7-1.9-1-.1-1.8.7-1.9 1.7L26 34.1l-4.2-2.4.6-10.1c.1-1-.7-1.8-1.7-1.9-1-.1-1.8.7-1.9 1.7l-.5 8.3-5.8-3.4c-.9-.5-2-.2-2.4.7-.5.9-.2 2 .7 2.4l5.8 3.4-6.9 4.5c-.8.5-1.1 1.7-.5 2.5.3.5.9.8 1.5.8.3 0 .7-.1 1-.3l8.5-5.5 4.2 2.4-10 6.5c-.8.5-1.1 1.7-.5 2.5.3.5.9.8 1.5.8.3 0 .7-.1 1-.3l11.5-7.5 2.7 1.6-6.9 4.5c-.8.5-1.1 1.7-.5 2.5.3.5.9.8 1.5.8.3 0 .7-.1 1-.3l8.5-5.5 15.2 8.8c.3.2.6.2.9.2.6 0 1.2-.3 1.6-.9.1-.9-.1-2-1-2.4z" fill="#77a4bd"/><path d="M51.5 49.1c-.5-.9-1.6-1.1-2.4-.7l-15.2 8.8-8.5-5.5c-.8-.5-1.9-.3-2.5.5-.5.8-.3 1.9.5 2.5l6.9 4.5-2.7 1.6-11.5-7.5c-.8-.5-1.9-.3-2.5.5-.5.8-.3 1.9.5 2.5l10 6.5-4.2 2.4-8.5-5.5c-.8-.5-1.9-.3-2.5.5-.5.8-.3 1.9.5 2.5l6.9 4.5-5.8 3.4c-.9.5-1.1 1.6-.7 2.4.3.6.9.9 1.6.9.3 0 .6-.1.9-.2l5.8-3.4.5 8.3c.1 1 .8 1.7 1.8 1.7h.1c1-.1 1.7-.9 1.7-1.9l-.6-10.1 4.2-2.4.7 11.9c.1 1 .8 1.7 1.8 1.7h.1c1-.1 1.7-.9 1.7-1.9l-.8-13.7 2.7-1.6.5 8.3c.1 1 .8 1.7 1.8 1.7h.1c1-.1 1.7-.9 1.7-1.9l-.6-10.1 15.2-8.8c1.1-.4 1.3-1.5.8-2.4z" fill="#a0c8d7"/><path d="M64.1 80.9l-12.3-6.2v-3.2l7.4 3.7c.3.1.5.2.8.2.7 0 1.3-.4 1.6-1 .4-.9.1-2-.8-2.4l-9-4.6V50c0-1-.8-1.8-1.8-1.8s-1.8.8-1.8 1.8v17.5l-9 4.6c-.9.4-1.2 1.5-.8 2.4.3.6.9 1 1.6 1 .3 0 .5-.1.8-.2l7.4-3.7v3.2L35.9 81c-.9.4-1.2 1.5-.8 2.4.3.6.9 1 1.6 1 .3 0 .5-.1.8-.2l10.7-5.4v4.8l-9 4.6c-.9.4-1.2 1.5-.8 2.4.3.6.9 1 1.6 1 .3 0 .5-.1.8-.2l7.4-3.7v6.7c0 1 .8 1.8 1.8 1.8s1.8-.8 1.8-1.8v-6.7l7.4 3.7c.3.1.5.2.8.2.7 0 1.3-.4 1.6-1 .4-.9.1-2-.8-2.4l-9-4.6v-4.8l10.7 5.4c.3.1.5.2.8.2.7 0 1.3-.4 1.6-1 .4-1 0-2.1-.8-2.5z" fill="#77a4bd"/><path d="M90.9 60.2c-.5-.8-1.7-1.1-2.5-.5l-8.5 5.5-4.2-2.4 10-6.5c.8-.5 1.1-1.7.5-2.5-.5-.8-1.7-1.1-2.5-.5l-11.5 7.5-2.7-1.6 6.9-4.5c.8-.5 1.1-1.7.5-2.5-.5-.8-1.7-1.1-2.5-.5l-8.5 5.5-15.2-8.8c-.9-.5-1.9-.2-2.4.7-.5.9-.2 2 .7 2.4l15.2 8.8-.6 10.1c-.1 1 .7 1.8 1.7 1.9h.1c.9 0 1.7-.7 1.8-1.7l.5-8.3 2.7 1.6-.8 13.7c-.1 1 .7 1.8 1.7 1.9h.1c.9 0 1.7-.7 1.8-1.7l.8-11.9 4.2 2.4-.6 10.1c-.1 1 .7 1.8 1.7 1.9h.1c.9 0 1.7-.7 1.8-1.7l.5-8.3 5.8 3.4c.3.2.6.2.9.2.6 0 1.2-.3 1.6-.9.5-.9.2-2-.7-2.4l-5.8-3.4 6.9-4.5c.8-.6 1-1.7.5-2.5z" fill="#a0c8d7"/><path d="M90.3 37.3l-6.9-4.5 5.8-3.4c.9-.5 1.1-1.6.7-2.4-.5-.9-1.6-1.1-2.4-.7l-5.8 3.4-.5-8.3c-.1-1-.9-1.7-1.9-1.7-1 .1-1.7.9-1.7 1.9l.6 10.1-4.2 2.4-.7-11.9c-.1-1-.9-1.7-1.9-1.7-1 .1-1.7.9-1.7 1.9l.8 13.7-2.7 1.6-.5-8.3c-.1-1-.9-1.7-1.9-1.7-1 .1-1.7.9-1.7 1.9l.6 10.1-15.2 8.8c-.9.5-1.1 1.6-.7 2.4.3.6.9.9 1.6.9.3 0 .6-.1.9-.2l15.2-8.8 8.5 5.5c.3.2.6.3 1 .3.6 0 1.2-.3 1.5-.8.5-.8.3-1.9-.5-2.5l-6.9-4.5 2.7-1.6 11.5 7.5c.3.2.6.3 1 .3.6 0 1.2-.3 1.5-.8.5-.8.3-1.9-.5-2.5l-10-6.5 4.2-2.4 8.5 5.5c.3.2.6.3 1 .3.6 0 1.2-.3 1.5-.8.3-.8.1-1.9-.8-2.5z" fill="#77a4bd"/></svg>
                        </div>
                        @* <div class="pre-content-title-icon"> *@
                        @*     <svg class="icon" viewBox="0 0 100 100" xml:space="preserve"><path d="M24.6 79.4C21.4 74 20 67.2 21.8 61.1c1.7-5.6 5.5-10.4 9.3-14.7 4.2-4.9 8.9-9.6 11.5-15.6 3.2-7.4 2.7-16.3-1.3-23.3 2.2 2.1 5.2 3 7.9 4.3 5.7 2.7 10.5 7.5 12.8 13.4 2.3 5.9 2 12.8-1.2 18.3-3.6 6.3-11.1 10.2-12.3 17.8-.4 2.9.6 6.2 3.3 7.5.9.4 1.9.6 2.9.6 3.8-.1 7.3-2.6 9.5-5.8 3.8-5.3 3.8-10.9 2.9-17.1 1.7.4 3.6 2.8 4.7 4.1 5.2 5.9 8.9 15.4 6.5 23.2-1.6 5-5.1 9.3-9.3 12.4-8.5 6.3-20.1 8-30 4.4-6-2-11.2-5.9-14.4-11.2z" fill-rule="evenodd" clip-rule="evenodd" fill="#e15b64"/></svg> *@
                        @* </div> *@
                        @* <div class="pre-content-title-icon"> *@
                        @*     <svg class="icon" viewBox="0 0 100 100" xml:space="preserve"><path d="M24.6 79.4C21.4 74 20 67.2 21.8 61.1c1.7-5.6 5.5-10.4 9.3-14.7 4.2-4.9 8.9-9.6 11.5-15.6 3.2-7.4 2.7-16.3-1.3-23.3 2.2 2.1 5.2 3 7.9 4.3 5.7 2.7 10.5 7.5 12.8 13.4 2.3 5.9 2 12.8-1.2 18.3-3.6 6.3-11.1 10.2-12.3 17.8-.4 2.9.6 6.2 3.3 7.5.9.4 1.9.6 2.9.6 3.8-.1 7.3-2.6 9.5-5.8 3.8-5.3 3.8-10.9 2.9-17.1 1.7.4 3.6 2.8 4.7 4.1 5.2 5.9 8.9 15.4 6.5 23.2-1.6 5-5.1 9.3-9.3 12.4-8.5 6.3-20.1 8-30 4.4-6-2-11.2-5.9-14.4-11.2z" fill-rule="evenodd" clip-rule="evenodd" fill="#e15b64"/></svg> *@
                        @* </div> *@
                    </div>
                    <p class="pre-content-sub">â‚¬@product.price</p>
                </div>
            </div>
        </div>
        <div class="product-meta-content-items">
            @* foreach is weird in Razor. When starting a foreach block, you can write
               normal C# code and seamlessly switch to HTML without specifying. *@
            @foreach (var item in metaItemsToShow)
            {
                /*
                 * I would usually intricately explain my code here. However, RTFM:
                 * @see https://learn.microsoft.com/en-us/dotnet/api/System.Object.GetType?view=net-6.0
                 * @see https://learn.microsoft.com/en-us/dotnet/api/System.Type.GetProperty?view=net-6.0
                 * @see https://learn.microsoft.com/en-us/dotnet/api/System.Reflection.PropertyInfo.GetValue?view=net-6.0
                 */
                var value = product.GetType().GetProperty(item).GetValue(product, null);
                <div class="item">
                    <span class="item-title">@item</span>
                    <span class="item-desc">@value</span>
                </div>
            }
        </div>
    </div>
</div>

<div class="dash-card dash-card-danger"></div>

<div class="product-content">
    <div class="list">
        <div class="list-header">
            <h2 class="list-header-text">Product Data</h2>
            <button type="button" class="edit-button">
                <svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" focusable="false" class="edit-button-icon" aria-hidden="true" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path fill="none" d="M0 0h24v24H0z"></path><path d="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04a.996.996 0 000-1.41l-2.34-2.34a.996.996 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"></path></svg>
            </button>
        </div>
        <div class="list-content">
            @foreach (var item in editableItems)
            {
                var value = product.GetType().GetProperty(item).GetValue(product, null);
                <div class="list-item">
                    <div class="list-item-content">
                        <div id="@item" class="list-item-kv">
                            <span class="kv-text">@Model.NormalizeKeyName(item)</span>
                        </div>
                        <div class="list-item-kv">
                            <span class="kv-text">@value</span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>