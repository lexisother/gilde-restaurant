image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: '33'
  ANDROID_BUILD_TOOLS: '33.0.0'
  ANDROID_SDK_TOOLS: '8512546'

buildLintApp:
  image: openjdk:11-jdk
  cache:
    paths:
      - Portal-App/.gradle/wrapper
      - Portal-App/.gradle/caches

  before_script:
    - apt-get update --yes
    - apt-get install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platform-tools" >/dev/null
    - echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_SDK_ROOT=$PWD
    - export PATH=$PATH:$PWD/platform-tools/
    - chmod +x ./Portal-App/gradlew
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. --licenses
    - set -o pipefail

  script:
    - cd Portal-App
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint
    - ./gradlew assembleDebug
    - ls -a
    - ls -a ../
    - ls -r .gradle

  artifacts:
    paths:
      - Portal-App/app/build/outputs/apk/debug/app-debug.apk
      - Portal-App/app/lint/reports/lint-results-debug.html

lintApi:
  image: php:8.1
  cache:
    paths:
      - API/vendor

  before_script:
    - apt-get update -yqq
    - apt-get install git wget libzip-dev unzip -yqq
    - docker-php-ext-install zip
    - cd API
    - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
    - php composer-setup.php
    - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
    - php composer.phar install

  script:
    - php composer.phar run lint
